Variable,FOLLOW
PROGRAM,{<Terminals.EOF: '$'>}
CODE,"{<Terminals.END: ('end',)>}"
INSTLIST,"{<Terminals.END: ('end',)>}"
INSTTAIL,"{<Terminals.END: ('end',)>}"
INSTRUCTION,"{<Terminals.DOTS: ('...',)>, <Terminals.END: ('end',)>, <Terminals.ELSE: ('else',)>}"
ASSIGN,"{<Terminals.ELSE: ('else',)>, <Terminals.DOTS: ('...',)>, <Terminals.END: ('end',)>}"
EXPRARITH,"{<Terminals.THEN: ('then',)>, <Terminals.SMALLER: ('<',)>, <Terminals.AND: ('and',)>, <Terminals.DOTS: ('...',)>, <Terminals.EQUAL: ('=',)>, <Terminals.RBRACK: ('}',)>, <Terminals.OR: ('or',)>, <Terminals.DO: ('do',)>, <Terminals.END: ('end',)>, <Terminals.ELSE: ('else',)>, <Terminals.RPAREN: (')',)>}"
EXPRARITHPRIME,"{<Terminals.THEN: ('then',)>, <Terminals.SMALLER: ('<',)>, <Terminals.AND: ('and',)>, <Terminals.DOTS: ('...',)>, <Terminals.EQUAL: ('=',)>, <Terminals.RBRACK: ('}',)>, <Terminals.OR: ('or',)>, <Terminals.DO: ('do',)>, <Terminals.END: ('end',)>, <Terminals.ELSE: ('else',)>, <Terminals.RPAREN: (')',)>}"
PROD,"{<Terminals.THEN: ('then',)>, <Terminals.SMALLER: ('<',)>, <Terminals.AND: ('and',)>, <Terminals.RBRACK: ('}',)>, <Terminals.OR: ('or',)>, <Terminals.MINUS: ('-',)>, <Terminals.DO: ('do',)>, <Terminals.END: ('end',)>, <Terminals.PLUS: ('+',)>, <Terminals.DOTS: ('...',)>, <Terminals.EQUAL: ('=',)>, <Terminals.ELSE: ('else',)>, <Terminals.RPAREN: (')',)>}"
PRODPRIME,"{<Terminals.THEN: ('then',)>, <Terminals.SMALLER: ('<',)>, <Terminals.AND: ('and',)>, <Terminals.DOTS: ('...',)>, <Terminals.EQUAL: ('=',)>, <Terminals.RBRACK: ('}',)>, <Terminals.OR: ('or',)>, <Terminals.MINUS: ('-',)>, <Terminals.DO: ('do',)>, <Terminals.END: ('end',)>, <Terminals.ELSE: ('else',)>, <Terminals.RPAREN: (')',)>, <Terminals.PLUS: ('+',)>}"
ATOM,"{<Terminals.THEN: ('then',)>, <Terminals.SMALLER: ('<',)>, <Terminals.AND: ('and',)>, <Terminals.RBRACK: ('}',)>, <Terminals.DIVIDE: ('/',)>, <Terminals.OR: ('or',)>, <Terminals.MINUS: ('-',)>, <Terminals.DO: ('do',)>, <Terminals.END: ('end',)>, <Terminals.PLUS: ('+',)>, <Terminals.DOTS: ('...',)>, <Terminals.EQUAL: ('=',)>, <Terminals.TIMES: ('*',)>, <Terminals.ELSE: ('else',)>, <Terminals.RPAREN: (')',)>}"
IF,"{<Terminals.ELSE: ('else',)>, <Terminals.DOTS: ('...',)>, <Terminals.END: ('end',)>}"
ELSETAIL,"{<Terminals.ELSE: ('else',)>, <Terminals.DOTS: ('...',)>, <Terminals.END: ('end',)>}"
COND,"{<Terminals.THEN: ('then',)>, <Terminals.DO: ('do',)>, <Terminals.RBRACK: ('}',)>}"
CONDPRIME,"{<Terminals.THEN: ('then',)>, <Terminals.DO: ('do',)>, <Terminals.RBRACK: ('}',)>}"
AND,"{<Terminals.THEN: ('then',)>, <Terminals.DO: ('do',)>, <Terminals.RBRACK: ('}',)>, <Terminals.OR: ('or',)>}"
ANDPRIME,"{<Terminals.THEN: ('then',)>, <Terminals.DO: ('do',)>, <Terminals.OR: ('or',)>, <Terminals.RBRACK: ('}',)>}"
CONDATOM,"{<Terminals.THEN: ('then',)>, <Terminals.AND: ('and',)>, <Terminals.RBRACK: ('}',)>, <Terminals.OR: ('or',)>, <Terminals.DO: ('do',)>}"
COMP,"{<Terminals.VARNAME: ('[VarName]',)>, <Terminals.NUMBER: ('[Number]',)>, <Terminals.LPAREN: ('(',)>, <Terminals.MINUS: ('-',)>}"
